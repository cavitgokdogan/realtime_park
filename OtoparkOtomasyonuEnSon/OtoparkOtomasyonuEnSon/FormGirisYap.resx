<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="__panel1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="lblHata.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="__label2.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="__label1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="picGirisYap.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="__pictureBox3.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="__pictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtParola.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="__panel3.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="txtKullaniciAdi.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="__panel2.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="__pictureBox2.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        x/8Bwd52FRSrMgQAAAAASUVORK5CYII=
</value>
  </data>
</root>